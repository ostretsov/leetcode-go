package problems

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func Test_wallsAndGates(t *testing.T) {
	const e = 2147483647
	map1 := [][]int{
		{e, -1, 0, e},
		{e, e, e, -1},
		{e, -1, e, -1},
		{0, -1, e, e},
	}
	wallsAndGates(map1)
	assert.Equal(t, []int{3, -1, 0, 1}, map1[0])
	assert.Equal(t, []int{2, 2, 1, -1}, map1[1])
	assert.Equal(t, []int{1, -1, 2, -1}, map1[2])
	assert.Equal(t, []int{0, -1, 3, 4}, map1[3])

	//map2 := [][]int{
	//	{0, e, -1, e, -1, -1, 0, -1, e, e, e, 0, 0, e, -1, 0, e, -1, e, e, 0, 0, -1, 0, e, -1, e, -1, -1, -1, e, e, 0, e, e, -1, 0, 0, 0, 0, e, e, 0, e, e, 0},
	//	{-1, 0, e, -1, -1, e, e, e, 0, 0, 0, e, 0, -1, 0, -1, 0, -1, e, 0, -1, -1, e, -1, e, 0, e, e, -1, -1, e, 0, e, e, 0, 0, 0, -1, e, -1, -1, e, 0, -1, 0, 0},
	//	{-1, 0, 0, e, 0, e, 0, e, 0, 0, 0, 0, -1, e, e, -1, e, -1, e, -1, e, -1, e, -1, e, 0, 0, e, -1, 0, -1, 0, 0, 0, 0, -1, 0, -1, 0, -1, e, e, -1, -1, e, 0},
	//	{0, -1, e, e, 0, e, 0, e, -1, e, -1, e, e, e, e, -1, 0, e, 0, -1, -1, -1, 0, 0, 0, -1, e, 0, -1, e, e, -1, -1, 0, -1, e, 0, e, 0, 0, e, -1, -1, e, e, 0},
	//	{-1, -1, 0, 0, e, e, 0, 0, e, -1, 0, -1, 0, 0, e, 0, e, 0, e, 0, e, e, 0, e, -1, 0, 0, e, 0, e, e, e, -1, e, -1, e, 0, 0, -1, e, -1, 0, -1, e, -1, e},
	//	{0, -1, e, -1, 0, -1, -1, e, e, 0, e, 0, -1, 0, e, -1, e, e, 0, -1, 0, 0, e, -1, 0, -1, e, -1, e, 0, 0, 0, 0, e, -1, 0, e, e, -1, e, 0, -1, e, 0, e, e},
	//	{0, 0, 0, e, -1, 0, e, -1, e, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, e, -1, 0, e, 0, e, -1, 0, -1, -1, e, 0, e, -1, 0, 0, -1, 0, -1, e, -1, e, e, -1, 0, 0, 0},
	//	{e, e, e, 0, 0, e, 0, -1, 0, -1, -1, -1, 0, e, -1, -1, -1, e, -1, e, -1, 0, e, -1, e, 0, e, -1, -1, e, -1, 0, 0, e, -1, e, 0, 0, 0, e, 0, -1, -1, 0, 0, -1},
	//	{-1, 0, -1, e, e, 0, e, e, -1, 0, -1, e, 0, 0, -1, 0, -1, -1, 0, 0, -1, -1, e, e, e, 0, e, -1, -1, 0, e, -1, 0, e, -1, -1, 0, e, -1, e, e, 0, e, -1, e, e},
	//	{-1, e, -1, e, -1, e, -1, -1, -1, 0, -1, 0, e, 0, 0, 0, -1, -1, -1, 0, 0, -1, -1, -1, 0, -1, e, e, -1, 0, e, e, e, 0, e, -1, e, 0, -1, -1, e, -1, e, 0, e, -1},
	//	{0, 0, e, 0, e, e, 0, -1, -1, -1, 0, -1, -1, -1, 0, 0, -1, e, e, 0, 0, 0, -1, 0, -1, -1, 0, -1, -1, 0, 0, 0, 0, e, -1, e, e, -1, e, -1, e, -1, 0, 0, -1, -1},
	//	{-1, e, e, 0, 0, e, -1, e, 0, e, 0, 0, e, e, 0, -1, 0, -1, e, e, -1, e, -1, -1, e, e, 0, -1, 0, e, 0, 0, e, e, -1, e, 0, -1, 0, 0, -1, 0, 0, 0, -1, -1},
	//	{0, -1, e, 0, -1, -1, 0, -1, e, -1, -1, -1, -1, e, -1, e, e, e, e, -1, -1, e, -1, e, -1, e, -1, e, -1, e, 0, e, 0, -1, -1, 0, 0, -1, 0, e, -1, -1, 0, e, 0, 0},
	//	{-1, -1, 0, -1, e, -1, 0, -1, e, e, e, -1, 0, -1, -1, 0, 0, 0, 0, 0, 0, e, 0, -1, e, 0, 0, -1, e, e, e, e, -1, 0, 0, 0, 0, -1, e, 0, 0, 0, 0, -1, e, -1},
	//	{e, 0, 0, e, 0, e, -1, 0, 0, e, e, e, e, e, 0, -1, 0, -1, -1, e, -1, 0, -1, -1, 0, e, e, -1, -1, e, e, -1, e, e, -1, e, 0, 0, 0, -1, -1, 0, 0, 0, 0, e},
	//	{0, -1, -1, 0, 0, -1, -1, -1, 0, 0, e, e, e, e, -1, -1, 0, -1, -1, -1, 0, e, e, 0, e, 0, 0, 0, 0, e, 0, e, e, 0, -1, e, -1, -1, e, e, e, -1, e, 0, -1, e},
	//	{-1, -1, -1, -1, e, 0, 0, e, 0, 0, e, 0, -1, 0, e, 0, 0, e, 0, -1, 0, 0, 0, 0, 0, -1, 0, e, e, 0, 0, e, 0, 0, e, e, -1, e, e, e, 0, -1, -1, 0, e, e},
	//	{e, -1, -1, 0, e, -1, 0, 0, -1, -1, e, 0, 0, -1, 0, e, e, -1, e, -1, 0, e, -1, -1, 0, e, -1, 0, -1, -1, -1, -1, e, -1, -1, 0, -1, e, -1, e, -1, e, 0, -1, 0, 0},
	//	{e, e, -1, e, -1, 0, 0, 0, e, e, 0, -1, -1, 0, -1, e, e, -1, 0, e, e, e, 0, 0, e, e, 0, e, -1, e, e, 0, e, 0, e, e, e, 0, -1, e, e, e, e, -1, -1, e},
	//}
	//wallsAndGates(map2)
}
